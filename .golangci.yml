# golangci-lint configuration
# Documentation: https://golangci-lint.run/usage/configuration/

run:
  timeout: 5m
  tests: true
  modules-download-mode: readonly

linters:
  enable:
    - errcheck # Check for unchecked errors
    - gosimple # Simplify code
    - govet # Vet examines Go source code
    - ineffassign # Detect ineffectual assignments
    - staticcheck # Advanced Go linter
    - unused # Check for unused constants, variables, functions and types
    - gofmt # Check code formatting
    - goimports # Check imports formatting
    - misspell # Check for misspelled English words
    - revive # Fast, configurable, extensible, flexible, and beautiful linter
    - unconvert # Remove unnecessary type conversions
    - unparam # Find unused function parameters
    - gosec # Security issues
    - copyloopvar # Replaced exportloopref (for Go 1.22+)

  disable:
    - typecheck # Can conflict with Go version

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true

  govet:
    enable:
      - shadow
    settings:
      shadow:
        strict: true

  gofmt:
    simplify: true

  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G104 # We handle errors with errcheck

  revive:
    rules:
      - name: exported
        disabled: false
        arguments:
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"

  misspell:
    locale: US

issues:
  # Maximum issues count per one linter
  max-issues-per-linter: 0

  # Maximum count of issues with the same text
  max-same-issues: 0

  # Exclude some linters from running on tests files
  exclude-rules:
    - path: _test\.go
      linters:
        - errcheck
        - gosec
        - unparam

    # Exclude known false positives
    - text: "G404: Use of weak random number generator"
      linters:
        - gosec

  # Show all issues from the linters
  exclude-use-default: false

output:
  formats: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  sort-results: true
